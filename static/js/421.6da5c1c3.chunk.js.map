{"version":3,"file":"static/js/421.6da5c1c3.chunk.js","mappings":"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","sources":["constants/form.js","core/utils/validateFormFields.js","components/Icon/Icon.styled.js","components/Icon/Icon.jsx","components/SigninForm/SigninForm.styled.js","components/SigninForm/SigninForm.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/AuthPage/AuthPage.styled.js","pages/AuthPage/AuthPage.js"],"sourcesContent":["export const SIGNIN_TYPE = 'signin';\nexport const REGISTER_TYPE = 'register';\n\nexport const EMAIL_KEY = 'email';\nexport const PASSWORD_KEY = 'password';\n\nexport const EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const SIGNIN_DEFAULT_ERROR_STATE = {\n  emailError: '',\n  passwordError: '',\n}\nexport const SIGNUP_DEFAULT_ERROR_STATE = {\n  nameError: '',\n  emailError: '',\n  passwordError: '',\n}\n\nexport const ERROR_COLOR = '#E74A3B';\nexport const SUCCESS_COLOR = '#3CBC81';\n","import { isEmpty } from 'lodash';\nimport { isNil } from 'lodash/lang';\nimport { EMAIL_KEY, EMAIL_REGEX, PASSWORD_KEY } from '../../constants/form';\n\nexport const validateFormFields = (fields) => {\n  let errors = [];\n\n  for (const [name, value] of Object.entries(fields)) {\n    const valid = validateField({\n      name,\n      value,\n      isEmail: name === EMAIL_KEY,\n      isPassword: name === PASSWORD_KEY,\n    });\n\n    if (!isNil(valid)) errors.push(valid);\n\n  }\n\n  if (!isEmpty(errors)) return errors.reduce((acc, field) => ({ ...acc, ...field }), {});\n}\n\n\nconst validateField = ({\n  name,\n  value,\n  isEmail,\n  isPassword,\n}) => {\n  if (isEmpty(value)) {\n    return { [`${name}Error`]: `${name.charAt(0).toUpperCase() + name.slice(1)} can not be empty` }\n  }\n\n  if (isEmail) {\n    return value.match(EMAIL_REGEX) ? null : { [`${name}Error`]: `Email field is not valid` }\n  }\n}\n","import styled from 'styled-components';\n\nexport const InputIcon = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 18px;\n  transform: translateY(-50%);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputIcon } from './Icon.styled';\n\nexport const Icon = ({ element: Element, color, size }) => {\n  return (\n    <InputIcon>\n      <Element color={color} size={size} />\n    </InputIcon>\n  );\n};\n\nIcon.propTypes = {\n  element: PropTypes.func.isRequired,\n  color: PropTypes.string,\n  size: PropTypes.number,\n};\n\nIcon.defaultProps = {\n  color: 'inherit',\n  size: 22,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\n\n\n\nexport const AuthFormElement = styled.div`\nwidth: 335px;\n /* width: 100%; */\n     @media screen and (min-width: 768px) {\n   max-width: 500px;\n   width: 500px;\n   }\n`;\n\nexport const InnerWrapper = styled.div`\n height: 100%;\n `;\n\n\nexport const AuthForm = styled.form`\n background-color: #2a2c36;\n border-radius: 30px;\n padding: 32px 28px 40px 28px;\n      @media screen and (min-width: 768px) {\n    padding: 44px 50px;\n   }\n `;\n\nexport const FormTitle = styled.h3`\n font-size: 24px;\n font-weight: 600;\n line-height: 1;\n margin-bottom: 50px;\n      @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 28px;\n\n   }\n `;\n\nexport const FieldWrapper = styled.div`\n position: relative;\n display: block;\n margin-bottom: 12px;\n   &:last-of-type{margin-bottom: 0;} \n      @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n   }\n\n  &:last-child{margin-bottom: 0;} \n `;\n\nexport const InputLabel = styled.label`\n position: relative;\n display: block;\n width: 100%;\n `;\n\nexport const InputField = styled.input` \n padding: 14px 16px 14px 48px; \n display: block; width: 100%; \n background-color: transparent; \n outline: none; \n color: #fafafa; \n font-size: 14px;\n opacity: 0.8; \n border: 1px solid rgba(255, 255, 255, 0.3); \n border-radius: 6px;\n \n  @media screen and (min-width: 768px) {\n padding: 18px 16px 18px 48px; \n font-size: 18px;\n  }\n\n\n&.input-error {\n   border: 1px solid #E74A3B; \n   background-image: url('../../assets/icons/error.svg'); \n   background-repeat: no-repeat; \n   background-size: 20px 20px; \n   background-position: 95% 50%; }\n\n&:focus {\n   border: 1px solid rgb(255, 255, 255) };\n    `;\n\n\n\nexport const ErrorText = styled.div`\n color: #E74A3B; \n margin-top: 8px;\n font-size: 14px;\n `;\n\nexport const SubmitButton = styled.button`\n margin-top: 28px;\n background: #8baa36;\n text-align: center;\n border-radius: 6px;\n width: 100%;\n padding: 14px;\n border: none;\n outline: none;\n cursor: pointer;\n font-size: 16px;\n color: #fff;\n       @media screen and (min-width: 768px) {\n    padding: 20px;\n    margin-top: 50px;\n   }\n `;\n export const StyledNavLink = styled(NavLink)`\ndisplay: flex;\nmargin-top: 10px;\njustify-content: center;\ntext-decoration: underline;\n`;","import { useState } from 'react';\nimport { isNil } from 'lodash/lang';\nimport { validateFormFields } from '../../core/utils/validateFormFields';\nimport { CgLock } from 'react-icons/cg';\nimport { HiOutlineMail } from 'react-icons/hi';\nimport { Icon } from '../Icon/Icon';\n\n\nimport { ERROR_COLOR, SIGNIN_DEFAULT_ERROR_STATE } from '../../constants/form';\nimport { useSignIn } from 'api/hooks';\n\nimport {\n  \n  AuthFormElement,\n  InnerWrapper,\n  AuthForm,\n  FormTitle,\n  FieldWrapper,\n  InputLabel,\n  InputField,\n  ErrorText,\n  SubmitButton,\n  StyledNavLink\n} from './SigninForm.styled'\n\nexport const SigninForm = () => {\n  const [signInData, setSignInData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [signInErrors, setSignInErrors] = useState(SIGNIN_DEFAULT_ERROR_STATE);\n\n  const { email, password } = signInData;\n\n  const { emailError, passwordError } = signInErrors;\n\n  const { mutate } = useSignIn();\n  \n \n  const handleSignIn = () => {\n\n    const errors = validateFormFields(signInData);\n\n    if (!isNil(errors)) {\n      return setSignInErrors(errors);\n    }\n\n    setSignInErrors(SIGNIN_DEFAULT_ERROR_STATE);\n    mutate({ email, password });\n\n\n  };\n\n  return (\n    <>\n    <AuthFormElement >\n      <InnerWrapper >\n        <AuthForm\n           autoComplete=\"off\"\n          onSubmit={e => e.preventDefault()}\n        >\n          <FormTitle>Sign In</FormTitle>\n          <FieldWrapper>\n            <InputLabel htmlFor=\"email\">\n              <Icon color={emailError && ERROR_COLOR} element={HiOutlineMail} />\n              <InputField\n                // className={emailError && 'input-error'}\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Email\"\n                autoComplete=\"new-email\"\n                onChange={e =>{\n                  setSignInData({ ...signInData, email: e.target.value });\n                  setSignInErrors(SIGNIN_DEFAULT_ERROR_STATE);\n                }}\n              />\n            </InputLabel>\n            {emailError && <ErrorText>{emailError}</ErrorText>}\n          </FieldWrapper>\n\n          <FieldWrapper>\n            <InputLabel htmlFor=\"password\">\n              <Icon color={passwordError && ERROR_COLOR} element={CgLock} />\n              <InputField\n                // className={passwordError && 'input-error'}\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={e => {\n                  setSignInData({ ...signInData, password: e.target.value });\n                  setSignInErrors(SIGNIN_DEFAULT_ERROR_STATE);\n                }}\n              />\n            </InputLabel>\n            {passwordError && (\n              <ErrorText>{passwordError}</ErrorText>\n            )}\n          </FieldWrapper>\n\n          <SubmitButton onClick={() => handleSignIn()}>\n            Sign In\n          </SubmitButton>\n        </AuthForm>\n      </InnerWrapper>\n    </AuthFormElement>\n          <StyledNavLink to=\"/register\" >Registration</StyledNavLink>   \n</>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormTitle = styled.h3`\n font-size: 24px;\n font-weight: 600;\n line-height: 1;\n margin-bottom: 32px;\n      @media screen and (min-width: 768px) {\n    margin-bottom: 18px;\n font-size: 28px;\n\n   }\n `;\n\n","import { useState } from 'react';\nimport { isNil } from 'lodash/lang';\nimport { validateFormFields } from '../../core/utils/validateFormFields';\nimport { useRegister } from '../../api/hooks';\nimport { ERROR_COLOR, SIGNUP_DEFAULT_ERROR_STATE } from '../../constants/form';\nimport { Icon } from '../Icon/Icon';\nimport { CgLock } from 'react-icons/cg';\nimport { HiOutlineMail } from 'react-icons/hi';\nimport {BiUser} from 'react-icons/bi'\n\nimport {\n    AuthFormElement,\n  InnerWrapper,\n  AuthForm,\n  FieldWrapper,\n  InputLabel,\n  InputField,\n  ErrorText,\n  SubmitButton,\n  StyledNavLink\n} from '../SigninForm/SigninForm.styled'\nimport {FormTitle} from './RegisterForm.styled'\n\n\nexport const RegisterForm = () => {\n  const [signUpData, setSignUpData] = useState({\n    name:'',\n    email: '',\n    password: '',\n  });\n\n\n  const [signUpErrors, setSignUpErrors] = useState(SIGNUP_DEFAULT_ERROR_STATE);\n\n  const {name, email, password } = signUpData;\n\n  const { nameError, emailError, passwordError } = signUpErrors;\n\n  const { mutate} = useRegister();\n\n  const handleSubmit = () => {\n\n    const errors = validateFormFields(signUpData);\n  \n    if (!isNil(errors)) {\n      return setSignUpErrors(errors);\n    }\n  \n    setSignUpErrors(SIGNUP_DEFAULT_ERROR_STATE);\n    mutate({ name, email, password });\n  };\n  return (\n    <>\n  <AuthFormElement >\n      <InnerWrapper >\n        <AuthForm\n           autoComplete=\"off\"\n          onSubmit={e => e.preventDefault()}\n        >\n          <FormTitle>Register</FormTitle>\n          <FieldWrapper>\n            <InputLabel htmlFor=\"name\">\n              <Icon color={nameError && ERROR_COLOR} element={BiUser} />\n              <InputField\n                // className={nameError && 'input-error'}\n                id=\"name\"\n                type=\"name\"\n                name=\"name\"\n                value={name}\n                placeholder=\"Name\"\n                // autoComplete=\"new-email\"\n                  onChange={e => {\n                    setSignUpData({ ...signUpData, name: e.target.value });\n                    setSignUpErrors(SIGNUP_DEFAULT_ERROR_STATE);\n                  }\n                }\n              />\n            </InputLabel>\n            {nameError && <ErrorText>{nameError}</ErrorText>}\n          </FieldWrapper>\n\n          <FieldWrapper>\n            <InputLabel htmlFor=\"email\">\n              <Icon color={emailError && ERROR_COLOR} element={HiOutlineMail} />\n              <InputField\n                // className={emailError && 'input-error'}\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Email\"\n                autoComplete=\"new-email\"\n                  onChange={e => {\n                    setSignUpData({ ...signUpData, email: e.target.value });\n                    setSignUpErrors(SIGNUP_DEFAULT_ERROR_STATE);\n                  }\n                }\n              />\n            </InputLabel>\n            {emailError && <ErrorText>{emailError}</ErrorText>}\n          </FieldWrapper>\n\n          <FieldWrapper>\n            <InputLabel htmlFor=\"password\">\n              <Icon color={passwordError && ERROR_COLOR} element={CgLock} />\n              <InputField\n                // className={passwordError && 'input-error'}\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={e => {\n                  setSignUpData({ ...signUpData, password: e.target.value });\n                  setSignUpErrors(SIGNUP_DEFAULT_ERROR_STATE);\n                }\n                }\n              />\n            </InputLabel>\n            {passwordError && (\n              <ErrorText>{passwordError}</ErrorText>\n            )}\n          </FieldWrapper>\n\n          <SubmitButton onClick={() => handleSubmit()}>\n            Register\n          </SubmitButton>\n        </AuthForm>\n      </InnerWrapper>\n    </AuthFormElement>\n      <StyledNavLink to=\"/signin\" >Sign In</StyledNavLink>  \n    </>\n  );\n  \n};","import styled, { keyframes } from 'styled-components';\nimport BlackBgrDesk from '../../assets/images/authPageBlack.png'\nimport BlackBgrTablet from '../../assets/images/authPageBlackTablet.png'\nimport BlackBgrMobile from '../../assets/images/authPageBlackMobile.png'\n\nconst slideInLeft = keyframes`\n  0% {\n    transform: translateX(-100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nconst slideInRight = keyframes`\n  0% {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nexport const StyledAuthPage = styled.div`\n  width: 100%;\n  height: 100vh;\n  min-height: 100vh;\n  background-image:  url(${BlackBgrMobile});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom, center;\n  background-color: #ECECEC;\n  color: #fff;\n\n  @media screen and (min-width: 768px) and (max-width: 1023px) {\n      background-image:  url(${BlackBgrTablet});\n       /* background-position: ; */\n\n  }\n    @media screen and (min-width: 1024px) {\n      background-image:  url(${BlackBgrDesk});\n\n  }\n`;\n\nexport const AuthInn = styled.div`\n    height: 100%\n\n`;\n\nexport const AuthFlex = styled.div`\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n      @media screen and (min-width: 1024px) {\n  flex-direction: row;\n  align-items: flex-;\n  }\n`;\n\nexport const PersonImg = styled.picture`\nanimation: ${slideInLeft} 1s cubic-bezier(.36,.25,.32,1.42)forwards;\nposition: relative;\nz-index: 10;\ndisplay: flex;\nwidth: 285px;\nheight: 250px;\n @media screen and (min-width: 768px) and (max-width: 1024px) {\n  width: 409px;\n  height: 359px;\n  }\n    @media screen and (min-width: 1024px) {\n   width: 532px;\n   height: 468px;\n\n  }\n      @media screen and (min-width: 1200px) {\n\n   margin-right:115px;\n  }\n`;\n\nexport const FormLinkWraper = styled.div`\nanimation: ${slideInRight} 1s cubic-bezier(.36,.25,.32,1.42) forwards;\nposition: relative;\nbottom: 29px;\nz-index: 10;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n @media screen and (min-width: 768px) and (max-width: 1024px) {\nbottom: 10px;\n  }\n    @media screen and (min-width: 1024px) {\nbottom: 0px;\ntop: 17px;\n  }\n\n`;\n\n","import React from 'react';\nimport PersonOrderMobile from '../../images/registration/person_order_2x_mob.png'\nimport PersonOrderTablet from '../../images/registration/person_order_2x_tab.png'\nimport PersonOrderDesk from '../../images/registration/person_order_2x_desk.png'\n\n\nimport { SigninForm } from '../../components/SigninForm/SigninForm';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\nimport { SIGNIN_TYPE } from '../../constants/form';\nimport { StyledAuthPage, PersonImg, AuthFlex, FormLinkWraper, AuthInn } from './AuthPage.styled';\n// import { MotivatingModal } from '../../components/MotivatingModal/MotivatingModal';\n\n\n\n\nconst AuthPage = ({ type }) => {\n  return (\n    <StyledAuthPage>\n      <AuthInn className=\"inn\">\n        <AuthFlex >\n         <PersonImg>\n            <source\n             srcSet={PersonOrderDesk}\n             media=\"(min-width: 1024px)\"\n             type=\"image/png\"\n           />\n           <source\n              srcSet={PersonOrderTablet}\n              media=\"(min-width: 769px)\"\n              type=\"image/png\"\n            />\n            <img src={PersonOrderMobile } alt=\"\" />\n           </PersonImg>\n          <FormLinkWraper>\n         {type === SIGNIN_TYPE ? <SigninForm /> : <RegisterForm />}\n         </FormLinkWraper>\n        </AuthFlex>\n      </AuthInn>\n      {/* <MotivatingModal/> */}\n      </StyledAuthPage>\n  );\n};\n\nexport default AuthPage;"],"names":["EMAIL_REGEX","SIGNIN_DEFAULT_ERROR_STATE","emailError","passwordError","SIGNUP_DEFAULT_ERROR_STATE","nameError","ERROR_COLOR","validateFormFields","fields","errors","Object","entries","name","value","valid","validateField","isEmail","isPassword","isNil","push","isEmpty","reduce","acc","field","charAt","toUpperCase","slice","match","InputIcon","styled","Icon","Element","element","color","size","defaultProps","AuthFormElement","InnerWrapper","AuthForm","FormTitle","FieldWrapper","InputLabel","InputField","ErrorText","SubmitButton","StyledNavLink","NavLink","SigninForm","useState","email","password","signInData","setSignInData","signInErrors","setSignInErrors","mutate","useSignIn","autoComplete","onSubmit","e","preventDefault","htmlFor","HiOutlineMail","id","type","placeholder","onChange","target","CgLock","onClick","handleSignIn","to","RegisterForm","signUpData","setSignUpData","signUpErrors","setSignUpErrors","useRegister","BiUser","handleSubmit","slideInLeft","keyframes","slideInRight","StyledAuthPage","BlackBgrMobile","BlackBgrTablet","BlackBgrDesk","AuthInn","AuthFlex","PersonImg","FormLinkWraper","className","srcSet","PersonOrderDesk","media","PersonOrderTablet","src","PersonOrderMobile","alt"],"sourceRoot":""}